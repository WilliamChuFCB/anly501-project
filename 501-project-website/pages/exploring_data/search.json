[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring Data",
    "section": "",
    "text": "Exploring Data\nFirst, import necessary Python packages for data visualization."
  },
  {
    "objectID": "index.html#eda-for-record-data",
    "href": "index.html#eda-for-record-data",
    "title": "Exploring Data",
    "section": "EDA for record data",
    "text": "EDA for record data\nIn this part, I use different types of visualization methods to show the distribution and correlation in the “travel mode choice” data.\nFirst, read the csv file “travel_mode_choice.csv” and have a look at this data:\n\ndf2=pd.read_csv(\"travel_mode_choice.csv\")\ndf2.iloc[:10,:]\n\n\n\n\n\n  \n    \n      \n      TTME\n      INVC\n      INVT\n      GC\n      HINC\n      PSIZE\n      choice\n    \n  \n  \n    \n      0\n      40\n      20\n      345\n      57\n      20\n      1\n      2\n    \n    \n      1\n      45\n      148\n      115\n      160\n      45\n      1\n      1\n    \n    \n      2\n      20\n      19\n      325\n      55\n      26\n      1\n      2\n    \n    \n      3\n      15\n      38\n      255\n      66\n      26\n      1\n      2\n    \n    \n      4\n      20\n      21\n      300\n      54\n      6\n      1\n      2\n    \n    \n      5\n      45\n      18\n      305\n      51\n      20\n      1\n      2\n    \n    \n      6\n      10\n      28\n      305\n      75\n      72\n      2\n      2\n    \n    \n      7\n      20\n      21\n      305\n      54\n      6\n      1\n      2\n    \n    \n      8\n      45\n      45\n      465\n      116\n      10\n      2\n      2\n    \n    \n      9\n      90\n      142\n      105\n      153\n      50\n      1\n      1\n    \n  \n\n\n\n\nCreate a pairplot to figure out the distribution within every two X features:\n\nsns.set_theme(font_scale=1.3)\n\nplot1=sns.pairplot(\n    data=df2,\n    hue='choice'    \n    )\n\nFS=18\nplot1.axes[0,0].set_ylabel('TTME',fontsize=FS)\nplot1.axes[1,0].set_ylabel('INVC',fontsize=FS)\nplot1.axes[2,0].set_ylabel('INVT',fontsize=FS)\nplot1.axes[3,0].set_ylabel('GC',fontsize=FS)\nplot1.axes[4,0].set_ylabel('HINC',fontsize=FS)\nplot1.axes[5,0].set_ylabel('PSIZE',fontsize=FS)\nplot1.axes[5,0].set_xlabel('TTME',fontsize=FS)\nplot1.axes[5,1].set_xlabel('INVC',fontsize=FS)\nplot1.axes[5,2].set_xlabel('INVT',fontsize=FS)\nplot1.axes[5,3].set_xlabel('GC',fontsize=FS)\nplot1.axes[5,4].set_xlabel('HINC',fontsize=FS)\nplot1.axes[5,5].set_xlabel('PSIZE',fontsize=FS)\n\nplt.setp(plot1._legend.get_texts(), fontsize=FS)\nplot1.axes[0,2].set_title(\"Pairplot of travel mode choice data\", fontsize=18)\nprint(type(plot1))\nplt.show()\n\n<class 'seaborn.axisgrid.PairGrid'>\n\n\n\n\n\nIn this pariplot, three categories in target variable, “air”, “train” and “bus” are represented by three different colors. Charts on the diagonal are distribution plots of each variable while other charts are 2-D scatter plot for every combination of variables. We can see that data of three different categories seems to have different distribution.\nThen, I use a heat map to visualize the correlation matrix of this data:\n\nprint(df2.corr())\nfig,axes = plt.subplots(1, 1, num=\"stars\",figsize=(14, 12))\naxes = sns.heatmap(df2.corr(), vmin=-1, vmax=1,cmap=\"vlag\")\naxes.set_title(\"Heat Map of the Correlation Matrix\", fontsize=18)\nplt.show()\n\n            TTME      INVC      INVT        GC      HINC    PSIZE     choice\nTTME    1.000000  0.464165 -0.152421  0.309941  0.142177  0.070189 -0.384252\nINVC    0.464165  1.000000 -0.429092  0.550372  0.362047 -0.040891 -0.693269\nINVT   -0.152421 -0.429092  1.000000  0.484061 -0.241788 -0.045246  0.678051\nGC      0.309941  0.550372  0.484061  1.000000  0.131839  0.079697 -0.057761\nHINC    0.142177  0.362047 -0.241788  0.131839  1.000000 -0.017023 -0.294000\nPSIZE   0.070189 -0.040891 -0.045246  0.079697 -0.017023  1.000000 -0.078319\nchoice -0.384252 -0.693269  0.678051 -0.057761 -0.294000 -0.078319  1.000000\n\n\n\n\n\nThis heat map shows the correlation within all the X features and the target variable. A red grid indicates that two variables have very high correlation value, blue grids represent for negative correlation, and white grids mean that there do not exist significant correlation between two variables. In this plot, red grids only exist on the diagonal."
  },
  {
    "objectID": "index.html#eda-for-text-data",
    "href": "index.html#eda-for-text-data",
    "title": "Exploring Data",
    "section": "EDA for text data",
    "text": "EDA for text data\nIn this part, I will use wordcloud to visualize the most frequent words that exist in the text data. In the wordcloud plot, bigger fontsize means higher frequency of a word.\nFirst, read the cleaned text data “free_mtr_text_data.csv”.\nThen, split into two dataframe according to the label.\n\ndf3=pd.read_csv(\"free_mtr_text_data.csv\")\n\nfreeway=df3.loc[df3[\"label\"]==\"freeway\",]\nmetro=df3.loc[df3[\"label\"]==\"metro\",]\n\nPlot the wordcloud of text data related to “freeway”:\n\nfrom wordcloud import WordCloud \nwords = [] \nfor sen in freeway['text']: \n    for word in sen.split(\" \"): \n        if len(word)>1:\n            words.append(word) \n            \nwords_str=' '.join(words) \nword_cloud = WordCloud(collocations = False, background_color = 'white').generate(words_str) \nplt.imshow(word_cloud, interpolation='bilinear') \nplt.axis('off') \nplt.savefig('wordcloud.png')\n\n\n\n\nPlot the wordcloud of text data related to “metro”:\n\nwords = [] \nfor sen in metro['text']: \n    for word in sen.split(\" \"): \n        if len(word)>1:\n            words.append(word) \n            \nwords_str=' '.join(words) \nword_cloud = WordCloud(collocations = False, background_color = 'white').generate(words_str) \nplt.imshow(word_cloud, interpolation='bilinear') \nplt.axis('off') \nplt.savefig('wordcloud.png')\n\n\n\n\nFrom the wordcloud of “freeway”, we can find words like traffic, car and driving, because freeway is built for cars to drive and sometimes people may encounter the traffic jam. By contrast, the wordcloud of “metro” contains words including train and station rather than words relevant to driving. It makes sense because metro has stations and specific routes, similar to the train."
  }
]